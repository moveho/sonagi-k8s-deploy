apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.9.0 (093c756)
  creationTimestamp: null
  labels:
    io.kompose.service: backend
  name: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      io.kompose.service: backend
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: backend
    spec:
      containers:
      - env:
        - name: HEALTHCHECK
          value: "TRUE"
        image: moveho/dcompose-v2-backend
        ports:
        - containerPort: 8081
        livenessProbe:
          exec:
            command:
            - curl
            - -f
            - http://localhost:8081/healthcheck
          failureThreshold: 3
          periodSeconds: 5
          timeoutSeconds: 5
        name: backend
        resources: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.9.0 (093c756)
  creationTimestamp: null
  labels:
    io.kompose.service: backend
  name: backend
spec:
  ports:
  - name: "8081"
    port: 8081
    targetPort: 8081
  selector:
    io.kompose.service: backend
status:
  loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: database-claim1
  name: database-claim1
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.9.0 (093c756)
  creationTimestamp: null
  labels:
    io.kompose.service: database
  name: database
spec:
  replicas: 1
  selector:  # Add the selector field
    matchLabels:
      io.kompose.service: database  # Match the labels used in the template
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: database
    spec:
      containers:
      - env:
        - name: MYSQL_DATABASE
          value: DOCKERTEST
        - name: MYSQL_ROOT_PASSWORD
          value: qwerty1234
        image: mariadb:10.3.7
        name: database
        ports:
        - containerPort: 3306
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: sample-database-data  # Use a valid volume name
        - mountPath: /etc/mysql
          name: database-claim1
      restartPolicy: Always
      volumes:
      - name: sample-database-data  # Define the volume with a valid name
        persistentVolumeClaim:
          claimName: sample-database-data
      - name: database-claim1
        persistentVolumeClaim:
          claimName: database-claim1

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.9.0 (093c756)
  creationTimestamp: null
  labels:
    io.kompose.service: database
  name: database
spec:
  ports:
  - name: "3306"
    port: 3306
    targetPort: 3306
  selector:
    io.kompose.service: database
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.9.0 (093c756)
  creationTimestamp: null
  labels:
    io.kompose.service: frontend
  name: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      io.kompose.service: frontend
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: frontend
    spec:
      containers:
      - image: moveho/dcompose-v2-frontend
        name: frontend
        ports:
        - containerPort: 35001
        resources: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.9.0 (093c756)
  creationTimestamp: null
  labels:
    io.kompose.service: frontend
  name: frontend
spec:
  type: NodePort
  ports:
  - name: "80"
    port: 80
    targetPort: 35001
  selector:
    io.kompose.service: frontend

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: SampleDatabaseData
  name: sample-database-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: database-claim1
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  claimRef:
    name: database-claim1
    namespace: default
  hostPath:
    path: /mnt/data
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: sample-database-data
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  claimRef:
    name: sample-database-data
    namespace: default
  hostPath:
    path: /mnt/data
    type: DirectoryOrCreate


